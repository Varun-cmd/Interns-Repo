import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
	
	@Bean
	public UserDetailsService userDetails(PasswordEncoder encoder) {
		UserDetails admin = User.withUsername("bobby").password(encoder.encode("abc")).build();
		UserDetails user = User.withUsername("Murali").password(encoder.encode("123")).build();
		
		return new InMemoryUserDetailsManager(admin,user);
	}
	
	public SecurityFilterChain filterChain(HttpSecurity http) {
		http.csrf().disable()
			.authorizeHttpRequests().requestMatchers("/secure/rest/welcome").permitAll()
			.and()
			.authorizeHttpRequests().requestMatchers("/secure/rest/getUsers").authenticated()
			.and().formLogin()
			.and().build();
	}
	
	@Bean	
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
}
