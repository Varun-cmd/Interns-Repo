package Config;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.DefaultSecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
	
//	public UserDetailsService userDetails(PasswordEncoder encoder) {
//		UserDetails admin =  User.withUsername("Mruali").password(encoder.encode("123")).build();
//		UserDetails user =  User.withUsername("Bobby").password(encoder.encode("456")).build();
//		
//		return new InMemoryUserDetailsManager(admin, user);
//	}
	
	public DefaultSecurityFilterChain filterChain(HttpSecurity http) throws Exception {
		return http.csrf(csrf->csrf.disable())
			.authorizeHttpRequests(request-> request.requestMatchers("secure/rest/welcome").permitAll()
			.requestMatchers("/secure/rest/getUsers").authenticated()).build();
	}
	
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
	
//	@Bean
//    public AuthenticationProvider authenticationProvider(){
//        DaoAuthenticationProvider authenticationProvider=new DaoAuthenticationProvider();
//        authenticationProvider.setUserDetailsService(userDetails(passwordEncoder()));
//        authenticationProvider.setPasswordEncoder(passwordEncoder());
//        return authenticationProvider;
//    }
//    @Bean
//    public AuthenticationManager authenticationManager(AuthenticationConfiguration config) throws Exception {
//        return config.getAuthenticationManager();
//    }
}
