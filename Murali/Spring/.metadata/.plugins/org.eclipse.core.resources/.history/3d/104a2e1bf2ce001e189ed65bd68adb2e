package Config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.provisioning.UserDetailsManager;
import org.springframework.security.web.AuthenticationEntryPoint;
import org.springframework.security.web.DefaultSecurityFilterChain;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;

import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;

@Configuration
//@EnableWebSecurity
public class SecurityConfig {
	
	public UserDetailsService userDetails(PasswordEncoder encoder) {
		UserDetails admin =  User.withUsername("Mruali").password(encoder.encode("123")).build();
		UserDetails user =  User.withUsername("Bobby").password(encoder.encode("456")).build();
		
		return new InMemoryUserDetailsManager(admin, user);
	}
	
	public DefaultSecurityFilterChain filterChain(HttpSecurity http) throws Exception {
		return http.csrf(csrf->csrf.disable())
			.authorizeHttpRequests(request-> request.requestMatchers("secure/rest/welcome").permitAll()
			.requestMatchers("/secure/rest/getUsers").authenticated()).build();
	}
	
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
}
